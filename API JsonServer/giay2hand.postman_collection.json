{
	"info": {
		"_postman_id": "1170e40c-7b52-463a-bd21-c7c41b5c66fb",
		"name": "giay2hand",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20792906"
	},
	"item": [
		{
			"name": "Login and register",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Set accessToken into collection variable', () => {\r",
									"    var token = pm.response.json().data.access_token;\r",
									"    console.log(token);\r",
									"    pm.collectionVariables.set('access_token', token);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"hinhin2002@gmail.com\",\r\n    \"password\":\"hin1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Set accessToken into collection variable', () => {\r",
									"    var res = pm.response.json();\r",
									"    //var token = res.data.access_token;\r",
									"    var email = res.data.email;\r",
									"    var password = res.data.password;\r",
									"    var firstname = res.data.firstname;\r",
									"    var lastname = res.data.lastname;\r",
									"    //pm.collectionVariables.set('token', token);\r",
									"    pm.collectionVariables.set('firstName', firstname);\r",
									"    pm.collectionVariables.set('lastName', lastname);\r",
									"    pm.collectionVariables.set('email', email);\r",
									"    pm.collectionVariables.set('password', password);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\":\"ann\",\r\n    \"lastname\":\"thuy\",\r\n    \"email\":\"annthuy2002@gmail.com\",\r\n    \"password\":\"ann1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with wrong gmail",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"hin202@gmail.com\",\r\n    \"password\":\"hin1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register with exist email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.json().hasOwnProperty('data')) {\r",
									"    pm.test('Set accessToken into environment variable', () => {\r",
									"        var res = pm.response.json();\r",
									"        var token = res.data.access_token;\r",
									"        var email = res.data.email;\r",
									"        var password = res.data.password;\r",
									"        pm.collectionVariables.set('token', token);\r",
									"        pm.collectionVariables.set('email', email);\r",
									"        pm.collectionVariables.set('password', password);\r",
									"    })\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\":\"ngan\",\r\n    \"lastname\":\"ngo\",\r\n    \"email\":\"nganngo030902@gmail.com\",\r\n    \"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "List of users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/auth/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find user by email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/auth/users/:email",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"users",
								":email"
							],
							"variable": [
								{
									"key": "email",
									"value": "{{email}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete users by email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"access_token\",null)\r",
									"postman.setNextRequest()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/auth/users/:email",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"users",
								":email"
							],
							"variable": [
								{
									"key": "email",
									"value": "{{email}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Shoes",
			"item": [
				{
					"name": "List of shoes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"List of shoes request status\", ()=>{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"// Only for debug\r",
									"var shoeIds = _.map(pm.response.json(), 'id');\r",
									"console.log(shoeIds);\r",
									"pm.globals.set(\"shoeIds\", shoeIds);\r",
									"for (let shoeId of shoeIds) {  \r",
									"    console.log(shoeId);  \r",
									"}\r",
									"const randomShoeId = Math.floor(Math.random() * shoeIds.length);\r",
									"console.log(randomShoeId, shoeIds[randomShoeId]);\r",
									"pm.collectionVariables.set(\"shoeId\",shoeIds[randomShoeId]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/shoes",
							"host": [
								"{{url}}"
							],
							"path": [
								"shoes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Single shoes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/shoes/:shoeId",
							"host": [
								"{{url}}"
							],
							"path": [
								"shoes",
								":shoeId"
							],
							"variable": [
								{
									"key": "shoeId",
									"value": "{{shoeId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Orders a shoes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"orderId\", pm.response.json().data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"shoeId\": {{shoeId}},\r\n    \"customerName\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Oders a shoe fails",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"shoeId\": 25626280,\r\n    \"customerName\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "get an order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/auth/orders/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update oders",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerName\": \"Hin Hin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders/:orderId",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete order",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/auth/orders/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/auth/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var code = pm.response.code;",
					"",
					"if(code === 200){",
					"    pm.test(\"Status code is 200\", function () {",
					"        pm.response.to.have.status(200);",
					"    });",
					"} else if(code === 204) {",
					"    pm.test(\"Status code is 204\", function () {",
					"        pm.response.to.have.status(204);",
					"    });",
					"} else if(code === 401) {",
					"    pm.test(\"Status code is 401\", function () {",
					"        pm.response.to.have.status(401);",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "shoeId",
			"value": ""
		},
		{
			"key": "firstName",
			"value": ""
		},
		{
			"key": "lastName",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "orderId",
			"value": ""
		}
	]
}